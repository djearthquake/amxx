#include amxmodx
#include fakemeta
#define get_user_model(%1,%2,%3) engfunc( EngFunc_InfoKeyValue, engfunc( EngFunc_GetInfoKeyBuffer, %1 ), "model", %2, %3 )

new g_Model[MAX_PLAYERS+1][MAX_NAME_LENGTH]
new g_counter[MAX_PLAYERS+1]
new g_warn_count[MAX_PLAYERS+1]

public plugin_init()
{
    register_plugin("Spam model stop", "1.0.1", "SPiNX")
}

public client_putinserver(id)
{
    if(is_user_connected(id))
    {
        pev(id, pev_model, g_Model[id], charsmax(g_Model[]))
    }
}

public client_infochanged(id)
{
    if(is_user_connected(id))
    {
        static szModel[MAX_NAME_LENGTH]
        get_user_model(id, szModel, charsmax( szModel ) );
        set_pev(id,pev_flags,pev(id,pev_flags) & ~FL_FROZEN);
        if(!equali(szModel, g_Model[id]))
        {
            server_print "model changed on %n^n from %s to %s.", id, g_Model[id], szModel
            copy(g_Model[id], charsmax(g_Model[]), szModel)
            g_counter[id]++
            if(g_counter[id]>8)
            {
                @exceeded(id)
            }
        }
    }
}

@exceeded(id)
{
    g_warn_count[id] ? @handle_spammer(id) : client_print(id, print_chat, "%N please stop changing models!", id) & set_pev(id,pev_flags,pev(id,pev_flags) | FL_FROZEN)
    g_warn_count[id]++
    g_counter[id] = 0
}

@handle_spammer(id)
{
    if(is_user_connected(id))
    {
        console_cmd(0, "kick #%d ^"Kicked for model spamming^"", get_user_userid(id))
    }
}

public client_disconnected(id)
{
    g_counter[id] = 0;
    g_warn_count[id] = 0;
}
